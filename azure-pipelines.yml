# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
 - "*"
#  branches:
#    include:
#      - main
#      - release

variables:
  buildConfiguration: 'Release'
  releaseBranchName: 'release'
  vmImage: 'ubuntu-20.04'
  dotnetSdkVersion: '6.x'
  webRepository: 'web'
  tag: '$(Build.BuildId)'

schedules:
- cron: '0 5 * * *'
  displayName: 'Deploy every day at 5 A.M'
  branches:
    include:
      - $(releaseBranchName)
  always: false

stages:
- stage: 'Build'
  displayName: 'Build and push'
  jobs:  
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: '$(vmImage)'
    steps:
    - task: Docker@2
      displayName: 'Build and push the image to container registry'
      inputs:
        command: buildAndPush
        buildContext: $(Build.Repository.LocalPath)
        repository: $(webRepository)
        dockerfile: '$(Build.SourcesDirectory)/Tailspin.SpaceGame.Web/Dockerfile.txt'
        containerRegistry: 'Container Registry Connection'
        tags: |
          $(tag)

- stage: 'Dev'
  displayName: 'Deploy the container to dev environment'
  dependsOn: Build
  jobs:
  - job: 'Deploy'
    displayName: 'Deploy job'
    pool:
      vmImage: '$(vmImage)'
    variables:
    - group: Release
    steps:
    - task: AzureWebAppContainer@1
      inputs:
       appName: $(WebAppNameDev)
       azureSubscription: 'Resource Manager - Tailspin - Space Game'
       imageName: $(RegistryName)/$(webRepository):$(build.buildId)          
 
- stage: 'Test'
  displayName: 'Deploy the container to test environment'
  dependsOn: Build
  jobs:
  - job: 'Deploy'
    displayName: 'Deploy job'
    pool:
      vmImage: '$(vmImage)'
    variables:
    - group: Release
    steps:
    - task: AzureWebAppContainer@1
      inputs:
       appName: $(WebAppNameTest)
       azureSubscription: 'Resource Manager - Tailspin - Space Game'
       imageName: $(RegistryName)/$(webRepository):$(build.buildId)  

- stage: 'Staging'
  displayName: 'Deploy the container to staging environment'
  dependsOn: Build
  jobs:
  - job: 'Deploy'
    displayName: 'Deploy job'
    pool:
      vmImage: '$(vmImage)'
    variables:
    - group: Release
    steps:
    - task: AzureWebAppContainer@1
      inputs:
       appName: $(WebAppNameStaging)
       azureSubscription: 'Resource Manager - Tailspin - Space Game'
       imageName: $(RegistryName)/$(webRepository):$(build.buildId)  
